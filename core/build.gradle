apply plugin: 'com.github.johnrengelman.shadow'

description = "Testcontainers Core"

sourceSets {
    jarFileTest
}

test.maxParallelForks = 4

idea.module.testSourceDirs += sourceSets.jarFileTest.allSource.srcDirs

jar {
    manifest {
        attributes('Implementation-Version': project.getProperty("version"))
    }
}

shadowJar {
    [
        'META-INF/NOTICE',
        'META-INF/NOTICE.txt',
        'META-INF/LICENSE',
        'META-INF/LICENSE.txt',
        'META-INF/maven/',
        'META-INF/proguard/',
        'META-INF/versions/*/module-info.class',
        'META-INF/services/java.security.Provider',
    ].each { exclude(it) }
}

task jarFileTest(type: Test) {
    testClassesDirs = sourceSets.jarFileTest.output.classesDirs
    classpath = sourceSets.jarFileTest.runtimeClasspath

    file(shadowJar.outputs.files.singleFile) // input for correct caching
    systemProperty("jarFile", shadowJar.outputs.files.singleFile)

    dependsOn(shadowJar)
}
project.tasks.check.dependsOn(jarFileTest)

tasks.japicmp {
    packageExcludes = [
        "com.github.dockerjava.*",
        "org.testcontainers.shaded.*",
    ]

    classExcludes = [
        "org.testcontainers.utility.RyukResourceReaper",
    ]

    methodExcludes = [
        "org.testcontainers.containers.Container#getDockerClient()",
        "org.testcontainers.containers.ContainerState#getDockerClient()",
    ]

    fieldExcludes = []
}

configurations.all {
    resolutionStrategy {
        // use lower Jackson version
        force 'com.fasterxml.jackson.core:jackson-databind:2.8.8'
    }
}

dependencies {
    api 'junit:junit:4.13.2'
    api 'org.slf4j:slf4j-api:1.7.36'
    compileOnly 'org.jetbrains:annotations:23.0.0'
    testCompileOnly 'org.jetbrains:annotations:23.0.0'
    api 'org.apache.commons:commons-compress:1.22'
    api ('org.rnorth.duct-tape:duct-tape:1.0.8') {
        exclude(group: 'org.jetbrains', module: 'annotations')
    }

    shaded 'org.awaitility:awaitility:4.2.0'

    api platform('com.github.docker-java:docker-java-bom:3.2.13')
    shaded platform('com.github.docker-java:docker-java-bom:3.2.13')

    api "com.github.docker-java:docker-java-api"

    shaded 'com.github.docker-java:docker-java-core'

    api 'com.github.docker-java:docker-java-transport-zerodep'

    shaded "org.yaml:snakeyaml:1.33"

    shaded 'org.glassfish.main.external:trilead-ssh2-repackaged:4.1.2'

    shaded 'org.zeroturnaround:zt-exec:1.12'

    testImplementation 'org.apache.httpcomponents:httpclient:4.5.9'
    testImplementation 'redis.clients:jedis:4.3.1'
    testImplementation 'com.rabbitmq:amqp-client:5.16.0'
    testImplementation 'org.mongodb:mongo-java-driver:3.12.11'

    testImplementation ('org.mockito:mockito-core:4.8.1') {
        exclude(module: 'hamcrest-core')
    }
    // Synthetic JAR used for MountableFileTest and DirectoryTarResourceTest
    testImplementation files('testlib/repo/fakejar/fakejar/0/fakejar-0.jar')

    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation project(':test-support')

    jarFileTestCompileOnly "org.projectlombok:lombok:${lombok.version}"
    jarFileTestAnnotationProcessor "org.projectlombok:lombok:${lombok.version}"
    jarFileTestImplementation 'junit:junit:4.13.2'
    jarFileTestImplementation 'org.assertj:assertj-core:3.22.0'
    jarFileTestImplementation 'org.ow2.asm:asm-debug-all:5.2'

    api "io.kubernetes:client-java:9.0.2"
}

tasks.generatePomFileForMavenJavaPublication.finalizedBy(
    tasks.register('checkPOMdependencies', org.testcontainers.build.ComparePOMWithLatestReleasedTask) {
        ignore = [
        ]
    }
)
